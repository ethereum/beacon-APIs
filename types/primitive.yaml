Pubkey:
  type: string
  format: hex
  pattern: "^0x[a-fA-F0-9]{96}$"
  description: "The validator's BLS public key, uniquely identifying them. _48-bytes, hex encoded with 0x prefix, case insensitive._"
  example: "0x93247f2209abcacf57b75a51dafae777f9dd38bc7053d1af526f220a7489a6d3a2753e5f3e8b1cfe39b56f43611df74a"

ForkVersion:
  type: string
  format: hex
  description: "a fork version number"
  example: "0x00000000"
  pattern: "^0x[a-fA-F0-9]{8}$"

Version:
  type: string
  description: "A string which uniquely identifies the client implementation and its version; similar to [HTTP User-Agent](https://tools.ietf.org/html/rfc7231#section-5.5.3)."
  example: "Lighthouse/v0.1.5 (Linux x86_64)"

GenesisTime:
  $ref: "./primitive.yaml#/Uint64"
  example: "1590832934"
  description: "The genesis_time configured for the beacon node, which is the unix time in seconds at which the Eth2.0 chain began."

Wei:
  $ref: "./primitive.yaml#/Uint256"

Gwei:
  $ref: "./primitive.yaml#/Uint64"

Uint64:
  type: string
  example: "1"

Uint256:
  type: string
  example: "1"

Int64:
  type: string
  example: "1"

DependentRoot:
  $ref: "./primitive.yaml#/Root"
  description: "The block root that this response is dependent on."

ExecutionOptimistic:
  type: boolean
  example: false
  description: "True if the response references an unverified execution payload. Optimistic information may be invalidated at a later time. If the field is not present, assume the False value."

Finalized:
  type: boolean
  example: false
  description: "True if the response references the finalized history of the chain, as determined by fork choice. If the field is not present, additional calls are necessary to compare the epoch of the requested information with the finalized checkpoint."

Root:
  type: string
  format: hex
  example: "0xcf8e0d4e9587369b2301d0790347320302cc0943d5a1884560367e8208d920f2"
  pattern: "^0x[a-fA-F0-9]{64}$"

Bytes32:
  type: string
  format: hex
  example: "0xcf8e0d4e9587369b2301d0790347320302cc0943d5a1884560367e8208d920f2"
  pattern: "^0x[a-fA-F0-9]{64}$"

Graffiti:
  type: string
  format: hex
  example: "0xcf8e0d4e9587369b2301d0790347320302cc0943d5a1884560367e8208d920f2"
  pattern: "^0x[a-fA-F0-9]{64}$"

Signature:
  type: string
  format: hex
  pattern: "^0x[a-fA-F0-9]{192}$"
  example: "0x1b66ac1fb663c9bc59509846d6ec05345bd908eda73e670af888da41af171505cc411d61252fb6cb3fa0017b679f8bb2305b26a285fa2737f175668d0dff91cc1b66ac1fb663c9bc59509846d6ec05345bd908eda73e670af888da41af171505"

BitList:
  type: string
  format: hex
  example: "0x01"
  pattern: "^0x[a-fA-F0-9]{2,}$"

Bitvector:
  type: string
  format: hex
  example: "0x01"
  pattern: "^0x[a-fA-F0-9]{2,}$"

Uint8:
  type: string
  description: "Unsigned 8 bit integer, max value 255"
  pattern: "^[1-2]?[0-9]{1,2}$"
  example: "0"

ExecutionAddress:
  type: string
  format: hex
  description: "An address on the execution (Ethereum 1) network."
  example: "0xAbcF8e0d4e9587369b2301D0790347320302cc09"
  pattern: "^0x[a-fA-F0-9]{40}$"

Transaction:
  type: string
  format: hex
  description: "A transaction on the execution (Ethereum 1) network."
  example: "0x02f878831469668303f51d843b9ac9f9843b9aca0082520894c93269b73096998db66be0441e836d873535cb9c8894a19041886f000080c001a031cc29234036afbf9a1fb9476b463367cb1f957ac0b919b69bbc798436e604aaa018c4e9c3914eb27aadd0b91e10b18655739fcf8c1fc398763a9f1beecb8ddc86"
  pattern: "^0x[a-fA-F0-9]{0,2147483648}$"

ExtraData:
  type: string
  format: hex
  description: "Extra data on the execution (Ethereum 1) network."
  example: "0xcf8e0d4e9587369b2301d0790347320302cc0943d5a1884560367e8208d920f2"
  pattern: "^0x[a-fA-F0-9]{0,64}$"

LogsBloom:
  type: string
  format: hex
  example: "0x
  pattern: "^0x[a-fA-F0-9]{512}$"

Blob:
  type: string
  format: hex
  pattern: "^0x[a-fA-F0-9]{262144}$"
  description: "A blob is `FIELD_ELEMENTS_PER_BLOB * size_of(BLSFieldElement) = 4096 * 32 = 131072` bytes (`DATA`) representing a Blob as defined in Deneb"

KZGCommitment:
  type: string
  format: hex
  pattern: "^0x[a-fA-F0-9]{96}$"
  description: "A G1 curve point. Same as BLS standard \"is valid pubkey\" check but also allows `0x00..00` for point-at-infinity"
  example: "0x93247f2209abcacf57b75a51dafae777f9dd38bc7053d1af526f220a7489a6d3a2753e5f3e8b1cfe39b56f43611df74a"

KZGProof:
  type: string
  format: hex
  pattern: "^0x[a-fA-F0-9]{96}$"
  description: "A G1 curve point. Used for verifying that the `KZGCommitment` for a given `Blob` is correct."


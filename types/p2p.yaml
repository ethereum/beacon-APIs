NetworkIdentity:
  type: object
  required: [peer_id, enr, p2p_addresses, discovery_addresses, metadata]
  properties:
    peer_id:
      $ref: "./p2p.yaml#/PeerId"
    enr:
      $ref: "./p2p.yaml#/ENR"
    p2p_addresses:
      type: array
      items:
        $ref: "./p2p.yaml#/Multiaddr"
        description: "Node's addresses on which eth2 RPC requests are served. [Read more](https://docs.libp2p.io/reference/glossary/#multiaddr)"
    discovery_addresses:
      type: array
      items:
        $ref: "./p2p.yaml#/Multiaddr"
        description: "Node's addresses on which is listening for discv5 requests. [Read more](https://docs.libp2p.io/reference/glossary/#multiaddr)"
        example: "/ip4/7.7.7.7/udp/30303/p2p/QmYyQSo1c1Ym7orWxLYvCrM2EmxFTANf8wXmmE7DWjhx5N"
    metadata:
      $ref: "./p2p.yaml#/MetaData"

MetaData:
  type: object
  description: "Based on eth2 [Metadata object](https://github.com/ethereum/consensus-specs/blob/v1.3.0/specs/phase0/p2p-interface.md#metadata)"
  required: [seq_number, attnets]
  properties:
    seq_number:
      description: "Uint64 starting at 0 used to version the node's metadata. If any other field in the local MetaData changes, the node MUST increment seq_number by 1."
      $ref: "./primitive.yaml#/Uint64"
    attnets:
      description: "Bitvector representing the node's persistent attestation subnet subscriptions."
      $ref: "./primitive.yaml#/Bitvector"
      example: "0x0000000000000000"
    syncnets:
      description: "Bitvector representing the node's sync committee subnet subscriptions. This metadata is not present in phase0, but will be present in Altair."
      $ref: "./primitive.yaml#/Bitvector"
      example: "0x0f"
    custody_group_count:
      description: "Uint64 representing the node's custody group count. The metadata is present from the Fulu fork."
      $ref: "./primitive.yaml#/Uint64"

Peer:
  type: object
  required: [peer_id, enr, last_seen_p2p_address, state, direction]
  properties:
    peer_id:
      $ref: "./p2p.yaml#/PeerId"
    enr:
      oneOf:
        - type: "null"
        - $ref: "./p2p.yaml#/ENR"
    last_seen_p2p_address:
      $ref: "./p2p.yaml#/Multiaddr"
      description: Multiaddrs used in last peer connection.
    state:
      $ref: "./p2p.yaml#/PeerConnectionState"
    direction:
      $ref: "./p2p.yaml#/PeerConnectionDirection"

PeerConnectionState:
  type: string
  enum: ["disconnected", "connecting", "connected", "disconnecting"]

PeerConnectionDirection:
  type: string
  enum: ["inbound", "outbound"]

PeerId:
  type: string
  description: "Cryptographic hash of a peerâ€™s public key. [Read more](https://docs.libp2p.io/concepts/peer-id/)"
  example: "QmYyQSo1c1Ym7orWxLYvCrM2EmxFTANf8wXmmE7DWjhx5N"

ENR:
  type: string
  description: "Ethereum node record. [Read more](https://eips.ethereum.org/EIPS/eip-778)"
  example: "enr:-IS4QHCYrYZbAKWCBRlAy5zzaDZXJBGkcnh4MHcBFZntXNFrdvJjX04jRzjzCBOonrkTfj499SZuOh8R33Ls8RRcy5wBgmlkgnY0gmlwhH8AAAGJc2VjcDI1NmsxoQPKY0yuDUmstAHYpMa2_oxVtw0RW_QAdpzBQA8yWM0xOIN1ZHCCdl8"

Multiaddr:
  type: string
  description: "[Read more](https://docs.libp2p.io/reference/glossary/#multiaddr)"
  example: "/ip4/7.7.7.7/tcp/4242/p2p/QmYyQSo1c1Ym7orWxLYvCrM2EmxFTANf8wXmmE7DWjhx5N"

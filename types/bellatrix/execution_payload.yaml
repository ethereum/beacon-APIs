Bellatrix:
  ExecutionPayloadCommon:
    # An abstract object to collect the common fields between the ExecutionPayload and the ExecutionPayloadHeader objects.
    type: object
    description: "The [`ExecutionPayload`](https://github.com/ethereum/consensus-specs/blob/v1.3.0/specs/bellatrix/beacon-chain.md#executionpayload) object from the CL Bellatrix spec."
    required: [parent_hash, fee_recipient, state_root, receipts_root, logs_bloom, prev_randao, block_number, gas_limit, gas_used, timestamp, extra_data, base_fee_per_gas, block_hash]
    properties:
      parent_hash:
        $ref: '../primitive.yaml#/Root'
      fee_recipient:
        $ref: '../primitive.yaml#/ExecutionAddress'
      state_root:
        $ref: '../primitive.yaml#/Root'
      receipts_root:
        $ref: '../primitive.yaml#/Root'
      logs_bloom:
        $ref: '../primitive.yaml#/LogsBloom'
      prev_randao:
        $ref: '../primitive.yaml#/Bytes32'
      block_number:
        $ref: '../primitive.yaml#/Uint64'
      gas_limit:
        $ref: '../primitive.yaml#/Uint64'
      gas_used:
        $ref: '../primitive.yaml#/Uint64'
      timestamp:
        $ref: '../primitive.yaml#/Uint64'
      extra_data:
        $ref: '../primitive.yaml#/ExtraData'
      base_fee_per_gas:
        $ref: '../primitive.yaml#/Uint256'
      block_hash:
        $ref: '../primitive.yaml#/Root'


  ExecutionPayload:
    allOf:
      - $ref: '#/Bellatrix/ExecutionPayloadCommon'
      - type: object
        required: [transactions]
        properties:
          transactions:
            $ref: './transactions.yaml#/Bellatrix/Transactions'

  ExecutionPayloadHeader:
    description: "The [`ExecutionPayloadHeader`](https://github.com/ethereum/consensus-specs/blob/v1.3.0/specs/bellatrix/beacon-chain.md#executionpayloadheader) object from the CL Bellatrix spec."
    allOf:
      - $ref: '#/Bellatrix/ExecutionPayloadCommon'
      - type: object
        required: [transactions_root]
        properties:
          transactions_root:
            $ref: '../primitive.yaml#/Root'

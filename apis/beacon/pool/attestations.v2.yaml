get:
  operationId: getPoolAttestationsV2
  summary: Get attestations from operations pool
  description: Retrieves attestations known by the node but not necessarily incorporated into any block
  parameters:
    - name: slot
      in: query
      required: false
      schema:
        $ref: '../../../beacon-node-oapi.yaml#/components/schemas/Uint64'
    - name: committee_index
      in: query
      required: false
      schema:
        $ref: '../../../beacon-node-oapi.yaml#/components/schemas/Uint64'
  tags:
    - Beacon
  responses:
    "200":
      description: Successful response
      headers:
        Eth-Consensus-Version:
          $ref: '../../../beacon-node-oapi.yaml#/components/headers/Eth-Consensus-Version'
      content:
        application/json:
          schema:
            title: GetPoolAttestationsV2Response
            type: object
            required: [version, data]
            properties:
              version:
                type: string
                enum: [phase0, altair, bellatrix, capella, deneb, electra]
                example: "electra"
              data:
                anyOf:
                  - type: array
                    items:
                      $ref: '../../../beacon-node-oapi.yaml#/components/schemas/Electra.Attestation'
                  - type: array
                    items:
                      $ref: '../../../beacon-node-oapi.yaml#/components/schemas/Phase0.Attestation'
    "400":
      description: "The slot or committee index could not be parsed"
      content:
        application/json:
          schema:
            $ref: "../../../beacon-node-oapi.yaml#/components/schemas/ErrorMessage"
          example:
            code: 400
            message: "Invalid slot: current"
    "500":
      $ref: '../../../beacon-node-oapi.yaml#/components/responses/InternalError'

post:
  operationId: submitPoolAttestationsV2
  summary: Submit Attestation objects to node
  description: |
    Submits attestations to the node. Each attestation in the request body is processed individually.
    
    If an attestation is validated successfully, the node MUST publish that attestation on the appropriate subnet.

    If one or more attestations fail validation, the node MUST return a 400 error with details of which attestations have failed, and why.

    Prior to the Electra hard fork, this endpoint MUST be sent Attestation objects only.  At and after the Electra hard fork, this endpoint MUST be sent SingleAttestation objects only.
  parameters:
    - in: header
      schema:
        $ref: '../../../beacon-node-oapi.yaml#/components/schemas/ConsensusVersion'
      required: true
      name: Eth-Consensus-Version
      description: "The consensus version to which the attestations being submitted belong."
  tags:
    - Beacon
    - ValidatorRequiredApi
  requestBody:
    required: true
    content:
      application/json:
        schema:
          oneOf:
            - type: array
              items:
                $ref: '../../../beacon-node-oapi.yaml#/components/schemas/Electra.SingleAttestation'
            - type: array
              items:
                $ref: '../../../beacon-node-oapi.yaml#/components/schemas/Phase0.Attestation'
  responses:
    "200":
      description: Attestations are stored in pool and broadcast on the appropriate subnet
    "400":
      description: "Errors with one or more attestations"
      content:
        application/json:
          schema:
            $ref: "../../../beacon-node-oapi.yaml#/components/schemas/IndexedErrorMessage"
    "500":
      $ref: '../../../beacon-node-oapi.yaml#/components/responses/InternalError'

post:
  tags:
    - Beacon
    - ValidatorRequiredApi
  summary: "Publish a signed block."
  operationId: "publishBlockV2"
  description: |
    Instructs the beacon node to broadcast a newly signed beacon block to the beacon network,
    to be included in the beacon chain. A success response (20x) indicates that the block
    passed gossip validation and was successfully broadcast onto the network.
    The beacon node is also expected to integrate the block into the state, but may broadcast it
    before doing so, so as to aid timely delivery of the block. Should the block fail full
    validation, a separate success response code (202) is used to indicate that the block was
    successfully broadcast but failed integration. After Deneb, this additionally instructs
    the beacon node to broadcast all given blobs. The broadcast behaviour may be adjusted via the
    `broadcast_validation` query parameter.
  parameters:
    - name: broadcast_validation
      in: query
      required: false
      description: |
        Level of validation that must be applied to a block before it is broadcast.

        Possible values:
        - **`gossip`** (default): lightweight gossip checks only
        - **`consensus`**: full consensus checks, including validation of all signatures and
          blocks fields _except_ for the execution payload transactions.
        - **`consensus_and_equivocation`**: the same as `consensus`, with an extra equivocation
          check immediately before the block is broadcast. If the block is found to be an
          equivocation it fails validation.

        If the block fails the requested level of a validation a 400 status MUST be returned
        immediately and the block MUST NOT be broadcast to the network.

        If validation succeeds, the block must still be fully verified before it is
        incorporated into the state and a 20x status is returned to the caller.
      schema:
        $ref: '../../../beacon-node-oapi.yaml#/components/schemas/BroadcastValidation'
    - in: header
      schema:
        $ref: '../../../beacon-node-oapi.yaml#/components/schemas/ConsensusVersion'
      required: true
      name: Eth-Consensus-Version
      description: "The active consensus version to which the block being submitted belongs."
  requestBody:
    description: "The `SignedBeaconBlock` object composed of `BeaconBlock` object (produced by beacon node) and validator signature."
    required: true
    content:
      application/json:
        schema:
          anyOf:
            - $ref: "../../../beacon-node-oapi.yaml#/components/schemas/Electra.SignedBlockContents"
            - $ref: "../../../beacon-node-oapi.yaml#/components/schemas/Deneb.SignedBlockContents"
            - $ref: "../../../beacon-node-oapi.yaml#/components/schemas/Capella.SignedBeaconBlock"
            - $ref: "../../../beacon-node-oapi.yaml#/components/schemas/Bellatrix.SignedBeaconBlock"
            - $ref: "../../../beacon-node-oapi.yaml#/components/schemas/Altair.SignedBeaconBlock"
            - $ref: '../../../beacon-node-oapi.yaml#/components/schemas/Phase0.SignedBeaconBlock'
      application/octet-stream:
        schema:
          description: "SSZ serialized block bytes. Use content type header to indicate that SSZ data is contained in the request body."
  responses:
    "200":
      description: "The block was validated successfully and has been broadcast. It has also been integrated into the beacon node's database."
    "202":
      description: "The block could not be integrated into the beacon node's database as it failed validation, but was successfully broadcast."
    "400":
      description: "The `SignedBeaconBlock` object is invalid or broadcast validation failed"
      content:
        application/json:
          schema:
            $ref: "../../../beacon-node-oapi.yaml#/components/schemas/ErrorMessage"
          example:
            code: 400
            message: "Invalid block: missing signature"
    "415":
      $ref: '../../../beacon-node-oapi.yaml#/components/responses/UnsupportedMediaType'
    "500":
      $ref: '../../../beacon-node-oapi.yaml#/components/responses/InternalError'
    "503":
      $ref: '../../../beacon-node-oapi.yaml#/components/responses/CurrentlySyncing'

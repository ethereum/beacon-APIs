post:
  tags:
    - Beacon
    - ValidatorRequiredApi
  summary: "Publish a signed block."
  deprecated: true
  operationId: "publishBlindedBlock"
  description: |
    Instructs the beacon node to use the components of the `SignedBlindedBeaconBlock` to construct and publish a 
    `SignedBeaconBlock` by swapping out the `transactions_root` for the corresponding full list of `transactions`.
    The beacon node should broadcast a newly constructed `SignedBeaconBlock` to the beacon network,
    to be included in the beacon chain. The beacon node is not required to validate the signed
    `BeaconBlock`, and a successful response (20X) only indicates that the broadcast has been
    successful. The beacon node is expected to integrate the new block into its state, and
    therefore validate the block internally, however blocks which fail the validation are still
    broadcast but a different status code is returned (202). Before Bellatrix, this endpoint will accept 
    a `SignedBeaconBlock`.
  parameters:
    - in: header
      schema:
        $ref: '../../../beacon-node-oapi.yaml#/components/schemas/ConsensusVersion'
      required: false
      name: Eth-Consensus-Version
      description: "The active consensus version to which the block being submitted belongs."
  requestBody:
    description: "The `SignedBlindedBeaconBlock` object composed of `BlindedBeaconBlock` object (produced by beacon node) and validator signature."
    required: true
    content:
      application/json:
        schema:
          anyOf:
            - $ref: "../../../beacon-node-oapi.yaml#/components/schemas/Electra.SignedBlindedBeaconBlock"
            - $ref: "../../../beacon-node-oapi.yaml#/components/schemas/Deneb.SignedBlindedBeaconBlock"
            - $ref: "../../../beacon-node-oapi.yaml#/components/schemas/Capella.SignedBlindedBeaconBlock"
            - $ref: "../../../beacon-node-oapi.yaml#/components/schemas/Bellatrix.SignedBlindedBeaconBlock"
            - $ref: "../../../beacon-node-oapi.yaml#/components/schemas/Altair.SignedBeaconBlock"
            - $ref: '../../../beacon-node-oapi.yaml#/components/schemas/Phase0.SignedBeaconBlock'
      application/octet-stream:
        schema:
          description: "SSZ serialized block bytes. Use content type header to indicate that SSZ data is contained in the request body."
  responses:
    "200":
      description: "The block was validated successfully and has been broadcast. It has also been integrated into the beacon node's database."
    "202":
      description: "The block failed validation, but was successfully broadcast anyway. It was not integrated into the beacon node's database."
    "400":
      description: "The `SignedBlindedBeaconBlock` object is invalid"
      content:
        application/json:
          schema:
            $ref: "../../../beacon-node-oapi.yaml#/components/schemas/ErrorMessage"
          example:
            code: 400
            message: "Invalid block: missing signature"
    "415":
      $ref: '../../../beacon-node-oapi.yaml#/components/responses/UnsupportedMediaType'
    "500":
      $ref: '../../../beacon-node-oapi.yaml#/components/responses/InternalError'
    "503":
      $ref: '../../../beacon-node-oapi.yaml#/components/responses/CurrentlySyncing'

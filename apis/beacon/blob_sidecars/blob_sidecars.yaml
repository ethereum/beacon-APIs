get:
  operationId: getBlobSidecars
  summary: Get blob sidecars  
  description: |
    Retrieves blob sidecars for a given block id.
    Depending on `Accept` header it can be returned either as json or as bytes serialized by SSZ.

    If the `indices` parameter is specified, only the blob sidecars with the specified indices will be returned. There are no guarantees
    for the returned blob sidecars in terms of ordering.
  tags:
    - Beacon
  parameters:
    - name: block_id
      in: path
      required: true
      $ref: '../../../beacon-node-oapi.yaml#/components/parameters/BlockId'
    - name: indices
      in: query
      description: Array of indices for blob sidecars to request for in the specified block. Returns all blob sidecars in the block if not specified.
      required: false
      schema:
        type: array
        uniqueItems: true
        items:
          $ref: '../../../beacon-node-oapi.yaml#/components/schemas/Uint64'
  responses:
    "200":
      description: "Successful response"
      headers:
        Eth-Consensus-Version:
          $ref: '../../../beacon-node-oapi.yaml#/components/headers/Eth-Consensus-Version'
          required: false
      content:
        application/json:
          schema:
            title: GetBlobSidecarsResponse
            type: object
            required: [data]
            properties:
              version:
                type: string
                enum: [phase0, altair, bellatrix, capella, deneb]
                example: "deneb"
              execution_optimistic:
                $ref: "../../../beacon-node-oapi.yaml#/components/schemas/ExecutionOptimistic"
              finalized:
                $ref: "../../../beacon-node-oapi.yaml#/components/schemas/Finalized"
              data:
                $ref: "../../../beacon-node-oapi.yaml#/components/schemas/Deneb.BlobSidecars"
        application/octet-stream:
          schema:
            description: "SSZ serialized `BlobSidecars` bytes. Use Accept header to choose this response type"
    "400":
      description: "The block ID supplied could not be parsed"
      content:
        application/json:
          schema:
            $ref: "../../../beacon-node-oapi.yaml#/components/schemas/ErrorMessage"
          example:
            code: 400
            message: "Invalid block ID: current"
    "404":
      description: "Block not found"
      content:
        application/json:
          schema:
            $ref: "../../../beacon-node-oapi.yaml#/components/schemas/ErrorMessage"
          example:
            code: 404
            message: "Block not found"
    "500":
      $ref: "../../../beacon-node-oapi.yaml#/components/responses/InternalError"

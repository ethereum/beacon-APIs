post:
  tags:
    - Validator
    - ValidatorRequiredApi
  summary: "Get PTC duties"
  operationId: "getPtcDuties"
  description: "Requests the beacon node to provide a set of Payload Timeliness Committee (PTC) duties,
    which should be performed by validators, for a particular epoch.

    Duties should only need to be checked once per epoch,
    however a chain reorganization (of > MIN_SEED_LOOKAHEAD epochs) could occur, resulting in a change of duties. For full safety,
    you should monitor head events and confirm the dependent root in this response matches:

      - event.previous_duty_dependent_root when `compute_epoch_at_slot(event.slot) == epoch`

      - event.current_duty_dependent_root when `compute_epoch_at_slot(event.slot) + 1 == epoch`

      - event.block otherwise


    The dependent_root value is `get_block_root_at_slot(state, compute_start_slot_at_epoch(epoch - 1) - 1)`
    or the genesis block root in the case of underflow."
  parameters:
    - name: epoch
      description: "Should only be allowed 1 epoch ahead"
      in: path
      required: true
      schema:
        $ref: "../../../beacon-node-oapi.yaml#/components/schemas/Uint64"
  requestBody:
    description: "An array of the validator indices for which to obtain the duties."
    required: true
    content:
      application/json:
        schema:
          title: GetPtcDutiesBody
          type: array
          minItems: 1
          uniqueItems: true
          items:
            $ref: "../../../beacon-node-oapi.yaml#/components/schemas/Uint64"
  responses:
    "200":
      description: Success response
      content:
        application/json:
          schema:
            title: GetPtcDutiesResponse
            type: object
            required: [dependent_root, execution_optimistic, data]
            properties:
              dependent_root:
                $ref: "../../../beacon-node-oapi.yaml#/components/schemas/DependentRoot"
              execution_optimistic:
                $ref: "../../../beacon-node-oapi.yaml#/components/schemas/ExecutionOptimistic"
              data:
                type: array
                items:
                  $ref: "../../../beacon-node-oapi.yaml#/components/schemas/PtcDuty"
    "400":
      description: "Invalid epoch or index"
      content:
        application/json:
          schema:
            $ref: "../../../beacon-node-oapi.yaml#/components/schemas/ErrorMessage"
          example:
            code: 400
            message: "Invalid epoch: -2"
    "500":
      $ref: "../../../beacon-node-oapi.yaml#/components/responses/InternalError"
    "503":
      $ref: "../../../beacon-node-oapi.yaml#/components/responses/CurrentlySyncing"

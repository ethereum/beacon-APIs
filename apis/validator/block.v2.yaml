get:
  tags:
    - ValidatorRequiredApi
    - Validator
  operationId: "produceBlockV2"
  summary: "Produce a new block, without signature."
  deprecated: true
  description: |
    Requests a beacon node to produce a valid block, which can then be signed by a validator.

    Metadata in the response indicates the type of block produced, and the supported types of block
    will be added to as forks progress.
  parameters:
    - name: slot
      in: path
      required: true
      description: "The slot for which the block should be proposed."
      schema:
        $ref: "../../beacon-node-oapi.yaml#/components/schemas/Uint64"
    - name: randao_reveal
      in: query
      required: true
      description: "The validator's randao reveal value."
      schema:
        $ref: '../../beacon-node-oapi.yaml#/components/schemas/Signature'
    - name: graffiti
      in: query
      required: false
      description: "Arbitrary data validator wants to include in block."
      schema:
        $ref: '../../beacon-node-oapi.yaml#/components/schemas/Graffiti'
    - name: skip_randao_verification
      $ref: '../../beacon-node-oapi.yaml#/components/parameters/SkipRandaoVerification'
  responses:
    "200":
      description: Success response
      headers:
        Eth-Consensus-Version:
          $ref: '../../beacon-node-oapi.yaml#/components/headers/Eth-Consensus-Version'
      content:
        application/json:
          schema:
            title: ProduceBlockV2Response
            type: object
            required: [version, data]
            properties:
              version:
                type: string
                enum: [ phase0, altair, bellatrix, capella, deneb ]
                example: "phase0"
              data:
                anyOf:
                 - $ref: '../../beacon-node-oapi.yaml#/components/schemas/BeaconBlock'
                 - $ref: "../../beacon-node-oapi.yaml#/components/schemas/Altair.BeaconBlock"
                 - $ref: "../../beacon-node-oapi.yaml#/components/schemas/Bellatrix.BeaconBlock"
                 - $ref: "../../beacon-node-oapi.yaml#/components/schemas/Capella.BeaconBlock"
                 - $ref: "../../beacon-node-oapi.yaml#/components/schemas/Deneb.BlockContents"
        application/octet-stream:
          schema:
            description: "SSZ serialized block bytes. Use Accept header to choose this response type, version string is sent in header `Eth-Consensus-Version`."
    "400":
      description: "Invalid block production request"
      content:
        application/json:
          schema:
            $ref: "../../beacon-node-oapi.yaml#/components/schemas/ErrorMessage"
          examples:
            InvalidRequest:
              value:
                code: 400
                message: "Invalid request to produce a block"
    "500":
      $ref: '../../beacon-node-oapi.yaml#/components/responses/InternalError'
    "503":
      $ref: '../../beacon-node-oapi.yaml#/components/responses/CurrentlySyncing'
